/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/8.0/userguide/building_java_projects.html
 */

plugins {
    // Apply the groovy plugin to also add support for Groovy (needed for Spock)
    id 'groovy'

    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'checkstyle'
    id 'jacoco'
    id 'java'
    id 'org.springframework.boot' version '3.3.2'
    id 'io.spring.dependency-management' version '1.1.0'
}
checkstyle {
    showViolations = true
    ignoreFailures = false
    maxWarnings = 0
    maxErrors = 0
}
repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {

    // Spring implementation dependencies
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // Spring Test dependencies
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // Spring Spock Test dependencies
    testImplementation 'org.spockframework:spock-spring:2.4-M1-groovy-4.0'

    // Spring Core Test dependencies
    testImplementation 'org.spockframework:spock-core:2.4-M1-groovy-4.0'




    // Use the latest Groovy version for Spock testing
    testImplementation 'org.apache.groovy:groovy:4.0.21'

//     Use the awesome Spock testing and specification framework even with Java
//    testImplementation 'org.spockframework:spock-core:1.3-groovy-2.5'//zmieniono l3kcja 6 niekompatybilne
    testImplementation 'junit:junit:4.13.2' //zmieniono l3kcja 6
//    testImplementation 'org.spockframework:spock-spring:1.3-groovy-2.5' //zmieniono l3kcja 6 niekompatybilne
//
//    // This dependency is used by the application.
//    implementation 'com.google.guava:guava:32.0.0-android'


    compileOnly 'org.projectlombok:lombok:1.18.34'
    annotationProcessor 'org.projectlombok:lombok:1.18.34'

    testCompileOnly 'org.projectlombok:lombok:1.18.34'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.34'

    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.17.2'

    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-web-services'
    implementation 'org.springframework.session:spring-session-core'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'



}

application {
    // Define the main class for the application.
    mainClass = 'pl.futurecollars.invoicing.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
jacoco {
    toolVersion = "0.8.11"
    reportsDirectory = layout.buildDirectory.dir('customJacocoReportDir')
}
jacocoTestReport {
    dependsOn test
}
test {
    finalizedBy jacocoTestReport
    finalizedBy jacocoTestCoverageVerification
}
jacocoTestReport {
    reports {
        xml.required = false
        csv.required = false
        html.outputLocation = layout.projectDirectory.dir('jacocoHtml')
    }
}
jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                counter = "BRANCH"
                minimum = 0.83
            }
        }
        rule {
            limit {
                counter = "LINE"
                minimum = 0.83
            }
        }

    }
}
