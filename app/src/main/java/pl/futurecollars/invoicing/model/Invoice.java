package pl.futurecollars.invoicing.model;

import io.swagger.annotations.ApiModelProperty;
import java.time.LocalDate;
import java.util.List;
import javax.persistence.CascadeType;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.transaction.Transactional;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import pl.futurecollars.invoicing.db.WithId;

@Entity
@Builder
@AllArgsConstructor
@Data
@Transactional
public class Invoice implements WithId {

  @Id
  @GeneratedValue(strategy = GenerationType.IDENTITY)
  @ApiModelProperty(value = "Invoice id (generated by application)")
  private Long id;
  @ApiModelProperty(value = "Invoice number (assigned by user)", required = true, example = "/2020/04/28/0001")
  private String number;
  @ApiModelProperty(value = "Data", required = true, example = "2020-01-01")
  private LocalDate date;
  @JoinColumn(name = "buyer")
  @OneToOne(cascade = CascadeType.ALL)
  @ApiModelProperty(value = "Buyer", required = true)
  private Company buyer;
  @JoinColumn(name = "seller")
  @OneToOne(cascade = CascadeType.ALL)
  @ApiModelProperty(value = "Seller", required = true)
  private Company seller;
  @JoinTable(name = "invoice_invoice_entry", inverseJoinColumns = @JoinColumn(name = "invoice_entry_id"))
  @OneToMany(cascade = CascadeType.ALL, orphanRemoval = true, fetch = FetchType.EAGER)
  @ApiModelProperty(value = "List of products/services", required = true)
  private List<InvoiceEntry> listOfInvoiceEntry;

  public Invoice() {
  }

  public Invoice(LocalDate date, Company buyer, Company seller, List<InvoiceEntry> listOfInvoice) {

    this.date = date;
    this.buyer = buyer;
    this.seller = seller;
    this.listOfInvoiceEntry = listOfInvoice;
  }
}
